{"version":3,"file":"imageboardrenderer.min.js","sources":["../src/imageboardrenderer.js"],"sourcesContent":["/**\n * @param {string} cmid\n * @param {string} canvaswidth\n * @param {string} canvasheight\n */\nexport const init = (cmid, canvaswidth, canvasheight) => {\n    //window.addEventListener(\"resize\", function () {\n    //if (canvaswidth > getWidth()) {\n\n\n    const resizer = document.getElementById(\"unilabeltype-imageboard-resizer-\"+cmid);\n    resizer.addEventListener(\"click\", function () {\n\n            const dummy = document.getElementById(\"unilabeltype-imageboard-gridtoggler-\"+cmid);\n            let newcanvaswidth = 0;\n            if (getWidth() < 750) {\n                newcanvaswidth = (getWidth() - dummy.getBoundingClientRect().left)-10;\n            } else if (getWidth() < 585) {\n                newcanvaswidth = (getWidth() - dummy.getBoundingClientRect().left)-20;\n            } else {\n                newcanvaswidth = (getWidth() - dummy.getBoundingClientRect().left)-80;\n            }\n            \n            if (newcanvaswidth > canvaswidth) {\n                newcanvaswidth = canvaswidth ;\n            }\n\n\n            let widthfactor = newcanvaswidth / canvaswidth;\n            //const mydiv = document.getElementById(\"module-\"+cmid);\n            const mydiv = document.getElementById(\"unilabeltype-imageboard-\"+cmid);\n\n\n\n            mydiv.style.transform = \"scale(\"+widthfactor+\")\";\n            mydiv.style.transformOrigin = \"0 0\";\n\n            /*\n            const elementLi = document.querySelector(\"li#section-0\");\n            elementLi.style.border = \"solid 2px\";\n\n            let offsetHeight = elementLi.offsetHeight;\n            let difference = canvasheight * (1 - widthfactor);\n            let newLiHeight = offsetHeight - difference;\n            alert(\"offsetHeight=\" + offsetHeight +\n                \"   difference=\" + difference +\n                \"   newLiHeight=\" + newLiHeight);\n\n            elementLi.style.height = newLiHeight + \"px\";\n*/\n    });\n\n    // Add eventlistener that toggles the 50x50px helpergrid on and off\n    const gridtoggler = document.getElementById(\"unilabeltype-imageboard-gridtoggler-\"+cmid);\n    gridtoggler.addEventListener(\"click\", function () {\n        const helpergridsquares = document.getElementsByClassName(\"unilabeltype-imageboard-helpergrid-\"+cmid);\n        Array.prototype.forEach.call(helpergridsquares, function (helpergridsquare) {\n            helpergridsquare.classList.toggle(\"hidden\");\n        });\n\n    });\n};\n\n\n/**\n * Helper function to get the width of the usable browserarea.\n *\n * @returns {*|number}\n */\nfunction getWidth() {\n    if (self.innerWidth) {\n        return self.innerWidth;\n    }\n    if (document.documentElement && document.documentElement.clientWidth) {\n        return document.documentElement.clientWidth;\n    }\n    if (document.body) {\n        return document.body.clientWidth;\n    }\n}\n"],"names":["getWidth","self","innerWidth","document","documentElement","clientWidth","body","cmid","canvaswidth","canvasheight","getElementById","addEventListener","dummy","newcanvaswidth","getBoundingClientRect","left","widthfactor","mydiv","style","transform","transformOrigin","helpergridsquares","getElementsByClassName","Array","prototype","forEach","call","helpergridsquare","classList","toggle"],"mappings":"0KAqESA,kBACDC,KAAKC,WACED,KAAKC,WAEZC,SAASC,iBAAmBD,SAASC,gBAAgBC,YAC9CF,SAASC,gBAAgBC,YAEhCF,SAASG,KACFH,SAASG,KAAKD,iCAxET,CAACE,KAAMC,YAAaC,gBAKpBN,SAASO,eAAe,mCAAmCH,MACnEI,iBAAiB,SAAS,iBAEpBC,MAAQT,SAASO,eAAe,uCAAuCH,UACzEM,eAAiB,EAEjBA,eADAb,WAAa,IACKA,WAAaY,MAAME,wBAAwBC,KAAM,GAC5Df,WAAa,IACFA,WAAaY,MAAME,wBAAwBC,KAAM,GAEjDf,WAAaY,MAAME,wBAAwBC,KAAM,GAGnEF,eAAiBL,cACjBK,eAAiBL,iBAIjBQ,YAAcH,eAAiBL,kBAE7BS,MAAQd,SAASO,eAAe,2BAA2BH,MAIjEU,MAAMC,MAAMC,UAAY,SAASH,YAAY,IAC7CC,MAAMC,MAAME,gBAAkB,SAkBlBjB,SAASO,eAAe,uCAAuCH,MACvEI,iBAAiB,SAAS,iBAC5BU,kBAAoBlB,SAASmB,uBAAuB,sCAAsCf,MAChGgB,MAAMC,UAAUC,QAAQC,KAAKL,mBAAmB,SAAUM,kBACtDA,iBAAiBC,UAAUC,OAAO"}